/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from '../../src/toast-container.component';
import * as import1 from '@angular/core';
import * as import2 from '../node_modules/@angular/common/index.ngfactory';
export declare class Wrapper_ToastContainer {
    _eventHandler: Function;
    context: import0.ToastContainer;
    _changed: boolean;
    constructor(p0: any, p1: any, p2: any);
    ngOnDetach(view: import1.ɵAppView<any>, componentView: import1.ɵAppView<any>, el: any): void;
    ngOnDestroy(): void;
    ngDoCheck(view: import1.ɵAppView<any>, el: any): boolean;
    checkHost(view: import1.ɵAppView<any>, componentView: import1.ɵAppView<any>, el: any): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import1.ɵAppView<any>, _eventHandler: any): void;
}
export declare var RenderType_ToastContainer: import1.RenderComponentType;
export declare class View_ToastContainer_0 extends import1.ɵAppView<import0.ToastContainer> {
    _text_0: any;
    _el_1: any;
    _text_2: any;
    _anchor_3: any;
    _vc_3: import1.ɵViewContainer;
    _TemplateRef_3_5: any;
    _NgForOf_3_6: import2.Wrapper_NgForOf;
    __NgFor_3_7: any;
    _text_4: any;
    _text_5: any;
    _expr_10: any;
    _expr_11: any;
    constructor(viewUtils: import1.ɵview_utils.ViewUtils, parentView: import1.ɵAppView<any>, parentIndex: number, parentElement: any);
    readonly _NgFor_3_7: any;
    createInternal(rootSelector: string): import1.ComponentRef<any>;
    injectorGetInternal(token: any, requestNodeIndex: number, notFoundResult: any): any;
    detectChangesInternal(): void;
    destroyInternal(): void;
    createEmbeddedViewInternal(nodeIndex: number): import1.ɵAppView<any>;
}
export declare const ToastContainerNgFactory: import1.ComponentFactory<import0.ToastContainer>;
